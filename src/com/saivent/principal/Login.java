/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.saivent.principal;

import com.saivent.util.*;
import java.awt.event.KeyEvent;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import javax.swing.JOptionPane;

/**
 *
 * @author elliot
 */
public class Login extends javax.swing.JFrame {

    Run runn = new Run();
    /**
     * Creates new form Login
     */
    Guardar_datos datosTxt = new Guardar_datos();

    public Login() {
        initComponents();
        guardarConexion_LlenarCombo();
        desabilitarC();
        this.setLocationRelativeTo(null);
    }

    //Guardo mi conexion a la base de datos y al mismo tiempo lleno el combo
    public void guardarConexion_LlenarCombo() {
       /* EntityManager em = AbstractFacade.conexion();
        Fichero f = new Fichero();
        try {
            em.getTransaction().begin();
            Query q = em.createNativeQuery("DROP TABLE IF EXISTS base_trabajando");
            int ejecuciones = q.executeUpdate();
            System.out.println("Eliminadas:" + ejecuciones);
            Query q1 = em.createNativeQuery("CREATE TABLE base_trabajando(id numeric,ip text,base text)");
            int ej1 = q1.executeUpdate();
            System.out.println("TablasCreadas:" + ej1);
            Query insert = em.createNativeQuery("INSERT INTO base_trabajando VALUES(1,'" + f.getIpbd() + "','" + f.getBd() + "')");
            int inserts = insert.executeUpdate();
            System.out.println("RegistrosInsertados:" + inserts);
            jComboBox1.addItem(f.getNombreTienda());
            em.getTransaction().commit();
            /* if (em != null) {
                habilitarC();
                jComboBox1.transferFocus();
                runn.ip.setText(ip);
                runn.base.setText(base);
                estconexion.setText("Conectado");
            } else {
                jComboBox1.transferFocus();
                JOptionPane.showMessageDialog(null, "Error de conexion");
                //estconexion.setText("Error de conexion");
            }
            

        } catch (Exception e) {

        }*/
    }

    private void desabilitarC() {
        nouser.setEnabled(false);
        nameuser.setEnabled(false);
        passuser.setEnabled(false);
        inicio.setEnabled(false);
    }

    private void habilitarC() {
        nouser.setEnabled(true);
        nameuser.setEnabled(true);
        passuser.setEnabled(true);
        inicio.setEnabled(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        nouser = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        nameuser = new javax.swing.JTextField();
        passuser = new javax.swing.JTextField();
        inicio = new javax.swing.JButton();
        estconexion = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos Usuario"));

        jLabel2.setText("Conectar con : ");

        jLabel3.setText("Usuario :");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECCIONA TU TIENDA" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        nouser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nouserKeyPressed(evt);
            }
        });

        jLabel4.setText("Contrase√±a :");

        nameuser.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nameuserFocusGained(evt);
            }
        });
        nameuser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nameuserKeyReleased(evt);
            }
        });

        passuser.setEditable(false);
        passuser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passuserKeyPressed(evt);
            }
        });

        inicio.setText("Acceder");
        inicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inicioActionPerformed(evt);
            }
        });
        inicio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inicioKeyTyped(evt);
            }
        });

        estconexion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        estconexion.setText("ghf");
        estconexion.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(estconexion, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox1, 0, 241, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(nouser, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nameuser))
                            .addComponent(passuser)))))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(152, 152, 152)
                .addComponent(inicio)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nouser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameuser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passuser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(16, 16, 16)
                .addComponent(estconexion, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(inicio)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void inicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inicioActionPerformed
        String encriptado = getMD5(nouser.getText().trim() + passuser.getText().trim());
        String passDB = validaContrase√±a(Integer.parseInt(nouser.getText()), nameuser.getText());
        String pass = validaContrase√±a(Integer.parseInt(nouser.getText()), nameuser.getText());

        System.out.println("");
        if (encriptado.equals(pass)) {
            runn.setVisible(true);
            dispose();
        } else {
            JOptionPane.showMessageDialog(null, "ERROR CREDENCIALES INCORRECTAS PARA:" + nameuser.getText(), "", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_inicioActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        if (jComboBox1.getSelectedIndex() > 0) {
            habilitarC();
            estconexion.setText("Conectado");
        }


    }//GEN-LAST:event_jComboBox1ActionPerformed


    private void nameuserKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameuserKeyReleased


    }//GEN-LAST:event_nameuserKeyReleased

    public static String getMD5(String input) {
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] messageDigest = md.digest(input.getBytes());
            BigInteger number = new BigInteger(1, messageDigest);
            String hashtext = number.toString(16);

            while (hashtext.length() < 32) {
                hashtext = "0" + hashtext;
            }
            return hashtext;
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException(e);
        }
    }


    private void nameuserFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameuserFocusGained
        nameuser.transferFocus();
    }//GEN-LAST:event_nameuserFocusGained

    private void inicioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inicioKeyTyped
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String encriptado = getMD5(nouser.getText().trim() + passuser.getText().trim());
            String passDB = validaContrase√±a(Integer.parseInt(nouser.getText()), nameuser.getText());
            if (encriptado.equals(passDB)) {
                runn.setVisible(true);
                dispose();
            } else {
                JOptionPane.showMessageDialog(null, "ERROR CREDENCIALES INCORRECTAS PARA:" + nameuser.getText(), "", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_inicioKeyTyped

    private void nouserKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nouserKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                String nombre = validarUsuario(Integer.parseInt(nouser.getText()));
                if (!nombre.equals("")) {
                    String[] datos = new Guardar_datos().lista(jComboBox1.getSelectedItem().toString());
                    nameuser.setText(nombre);
                    nameuser.transferFocus();
                    nouser.transferFocus();
                    passuser.setEditable(true);
                }
            } catch (Exception e) {

            }
        }
    }//GEN-LAST:event_nouserKeyPressed

    private void passuserKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passuserKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                String encriptado = getMD5(nouser.getText().trim() + passuser.getText().trim());
                String pass = validaContrase√±a(Integer.parseInt(nouser.getText()), nameuser.getText());
                System.out.println("ecriptado:" + encriptado);
                if (encriptado.equals(pass)) {
                    runn.setVisible(true);
                    passuser.transferFocus();
                    llenarRunnMensaje(nouser.getText(),"hgg");
                    dispose();
                } else {
                    JOptionPane.showMessageDialog(null, "ERROR CREDENCIALES INCORRECTAS PARA:" + nameuser.getText(), "", JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception e) {
                System.out.println("Error al ingresar:" + e.getMessage());
            }
        }


    }//GEN-LAST:event_passuserKeyPressed

    public String validarUsuario(int idUsuario) {
/*        EntityManager em = AbstractFacade.conexion();
        try {
            Query query = em.createNativeQuery("SELECT nombre FROM usuarios WHERE idusuario=" + idUsuario);
            String nombre = String.valueOf(query.getSingleResult());
            if (!nombre.equals("")) {
                return nombre;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ERROR AL BUSCAR USUARIO", "", JOptionPane.ERROR_MESSAGE);
        }*/
        return "";
    }

    public String validaContrase√±a(int idUsuario, String nombre) {
  /*      EntityManager em = AbstractFacade.conexion();
        try {
            Query query = em.createNativeQuery("SELECT pass FROM usuarios WHERE idusuario= ?"
                    + " AND nombre= ?");
            query.setParameter(1, idUsuario);
            query.setParameter(2, nombre);
            if (query != null) {
                return String.valueOf(query.getSingleResult());
            }
        } catch (Exception e) {
            System.out.println("Error al buscar contrase√±a de usuario:" + nombre);
            em.close();
        } finally {
            em.close();
        }
*/
        return "";
    }
    
    //lleno la etiqueta con id usuario,nombre,reloj
    public void llenarRunnMensaje(String id,String nombre){
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel estconexion;
    private javax.swing.JButton inicio;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField nameuser;
    private javax.swing.JTextField nouser;
    private javax.swing.JTextField passuser;
    // End of variables declaration//GEN-END:variables
}
